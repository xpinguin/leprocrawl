CRAWLER
==============================

1. == [correctly] finalize workers pool on exit ==

2. == deduce "frequency amortization" function in non-uniform random walks (posts, users) ==

	GOAL: popular/active users (and posts) should be checked more frequently,
			however other posts should not be forgotten: once-per-day seems like enough
			
	NOTE: relate func to user/post rating?
			
3. == store and crawl sublepras info ==
3.1 == crawl glagne info: ministers and banned ==

4. == monitor elections every wednesday (crawl) ==

5. == migrate to PostgreSQL: SQLite brings too much troubles with concurrent access ==

6. == use scipy sparse arrays to store known posts and users indicies<->freq ==
	WHY: memory requirements reduction

7. == introduce frequency-augmented random walk for comments == ???

8. == parser, storage, crawler for dirty.ru ==
8.1. think about generalization of current implementation!
